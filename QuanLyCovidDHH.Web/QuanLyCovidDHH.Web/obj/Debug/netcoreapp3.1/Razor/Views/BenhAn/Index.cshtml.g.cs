#pragma checksum "D:\KhoaLuanTotNghiep\QuanLyCovidDHH\quanlycoviddhh\QuanLyCovidDHH.Web\QuanLyCovidDHH.Web\Views\BenhAn\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_BenhAn_Index), @"mvc.1.0.view", @"/Views/BenhAn/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\KhoaLuanTotNghiep\QuanLyCovidDHH\quanlycoviddhh\QuanLyCovidDHH.Web\QuanLyCovidDHH.Web\Views\_ViewImports.cshtml"
using QuanLyCovidDHH.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\KhoaLuanTotNghiep\QuanLyCovidDHH\quanlycoviddhh\QuanLyCovidDHH.Web\QuanLyCovidDHH.Web\Views\_ViewImports.cshtml"
using QuanLyCovidDHH.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c83ad73f19a0852dc88e620e9e55b5da6ebcbbd6", @"/Views/BenhAn/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b38dad89131103367ff9d659211e15551a74304", @"/Views/_ViewImports.cshtml")]
    public class Views_BenhAn_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<QuanLyCovidDHH.Web.Models.BenhAn.TaoMoi>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "DangDieuTri", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "KhoiBenh", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "TuVong", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formBenhAn"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\KhoaLuanTotNghiep\QuanLyCovidDHH\quanlycoviddhh\QuanLyCovidDHH.Web\QuanLyCovidDHH.Web\Views\BenhAn\Index.cshtml"
  
    
    ViewData["Title"] = "BenhAn";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"table--database\">\r\n    <div class=\"container\">\r\n        <div class=\"section--title\">\r\n            <h3>DANH SÁCH THÔNG TIN BỆNH ÁN</h3>\r\n            <hr />\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd67435", async() => {
                WriteLiteral(@"
                <div class=""row"">
                    <div class=""col"">
                        <label>Trường</label>
                        <select class=""form-control"" id=""timkiem-timtheoIDTruong"" onclick=""TruongChanged(this)""> 
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd67966", async() => {
                    WriteLiteral("- Tất cả -");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col"">
                        <label>Khoa</label>
                        <select class=""form-control"" id=""timkiem-timtheoIDKhoa"" onclick=""KhoaChanged(this)""> 
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd69573", async() => {
                    WriteLiteral("- Tất cả -");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col"">
                        <label>Khoá học</label>
                        <select class=""form-control"" id=""timkiem-timtheoIDKhoaHoc""onclick=""KhoaHocChanged(this)""> 
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd611189", async() => {
                    WriteLiteral("- Tất cả -");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                 <div class=""col"">
                        <label>Sinh viên</label>
                        <select class=""form-control"" id=""timkiem-timtheoIDSinhVien"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd612772", async() => {
                    WriteLiteral("- Tất cả -");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                  
                </div>
                <div class=""row"">
                     <div class=""col"">
                        <div class=""form-group"">
                            <label class=""control-label"">Từ ngày</label>
                            <input id=""timkiem-timtheoTuNgay"" name=""timkiem-timtheoTuNgay"" class=""form-control"" type=""date"" />
                        </div>
                    </div>
                     <div class=""col"">
                        <div class=""form-group"">
                            <label class=""control-label"">Đến ngày </label>
                            <input id=""timkiem-timtheoDenNgay"" name=""timkiem-timtheoDenNgay"" class=""form-control"" type=""date"" />
                        </div>
                    </div>
                    <div class=""col"">
                        <label>Trạng thái điều trị</label>
                        <select class=""form-control"" id=""timkiem-timtheoT");
                WriteLiteral("rangThaiDieuTri\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd615228", async() => {
                    WriteLiteral("- Tất cả -");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd616571", async() => {
                    WriteLiteral("Đang điều trị ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd617918", async() => {
                    WriteLiteral("Khỏi bênh");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd619260", async() => {
                    WriteLiteral("Tử vong");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col"">
                        <label>Trạng thái duyệt</label>
                        <select class=""form-control"" id=""timkiem-timtheoTrangThaiDuyet"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd620854", async() => {
                    WriteLiteral("- Tất cả -");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd622197", async() => {
                    WriteLiteral("Đã duyệt");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd623538", async() => {
                    WriteLiteral("Chưa duyệt");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd624881", async() => {
                    WriteLiteral("Đã huỷ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
        
                 
             
                </div>
                <div class=""row d-flex justify-content-between"" style=""padding: 15px"">
                    <a class=""btn btn-success"" id=""btnAdd"" data-toggle=""modal"" data-target=""#exampleModal"">
                        <i class=""fa fa-plus""></i>
                        <span>Thêm mới</span>
                    </a>
                
                    <a class=""btn btn-primary"" id=""btnSearch"">
                        <i class=""fa fa-search""></i>
                        <span>Tìm kiếm</span>
                    </a>
                </div>
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
      
        <div class=""box-bordertop""> 
        
       
            <table class=""table table-hover table-bordered"" id=""table-full"">
               
         
            </table>
                  
                  <button class=""btn btn-success"" onclick=""exportTableToExcel('table-full', 'benhan-data')"">>Xuất File Excel</button>
                 
        </div>
    </div>



    <!-- Modal -->
    <div class=""modal fade"" id=""modalBenhAn"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h2 class=""text-center m-2"" id=""modal-title"">Bênh án</h2>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd628904", async() => {
                WriteLiteral("\r\n                    <div class=\"modal-body\">\r\n                        <input type=\"text\" hidden id=\"hiddenvalue\"");
                BeginWriteAttribute("value", " value=\"", 5554, "\"", 5562, 0);
                EndWriteAttribute();
                WriteLiteral(@" /> <!--Phân biệt nút Lưu lại trong Tạo mới và Chỉnh sửa-->
                        <div class=""errorTxt form-group"" id=""errorTxt""></div> <!--Khu vực validate-->
                      
                    <div id=""IDTruongAll""class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Tên trường</label>
                                   
                                     <select class=""form-control"" id=""IDTruong"" onclick=""Truong2Changed(this)"">
                                       
                                    </select>

                                </div>
                            </div>
                           
                      </div>
                     <div id=""IDKhoaAll"" class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""contro");
                WriteLiteral(@"l-label"">Tên Khoa</label>
                                   
                                     <select class=""form-control"" id=""IDKhoa"" onclick=""Khoa2Changed(this)"" >
                                       
                                    </select>
                                </div>
                            </div>
                           
                        </div>
                        
                        <div id=""IDKhoaHocAll"" class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Khoá học</label>
                                          
                                     <select class=""form-control"" id=""IDKhoaHoc"" onclick=""KhoaHoc2Changed(this)"">
                                          
                                     </select>
                                </div>
                            </div>
                       ");
                WriteLiteral(@" </div>
                         <div class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Mã bệnh án</label>
                                    <input id=""ghiChu"" name=""ghiChu"" class=""form-control"" type=""text"" />
                                </div>
                            </div>
                        </div>
                          <div class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Sinh viên</label>
                                   
                                     <select class=""form-control"" id=""IDSinhVien"">
                                       
                                    </select>
                                </div>
                            </div>
                           
                   ");
                WriteLiteral(@"     </div>
                         <div class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Ngày bắt đầu điều trị</label>
                                    <input id=""ngayBatDauDieuTri"" name=""ngayBatDauDieuTri"" class=""form-control"" type=""date"" />
                                </div>
                            </div>
                        </div>
                       <div class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Nơi điều trị</label>
                                    <input id=""noiDieuTri"" name=""noiDieuTri"" class=""form-control"" type=""text"" />
                                </div>
                            </div>
                        </div>
                       <div class=""row"">
                            <div");
                WriteLiteral(@" class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Biến thể</label>
                                    <input id=""bienThe"" name=""bienThe"" class=""form-control"" type=""text"" />
                                </div>
                            </div>
                        </div>
                         <div class=""row"">
                            <div class=""col"">
                             <div class=""form-group"">
                                <div id=""trangThaiDieuTri"" name=""trangThaiDieuTri"">
                                    <label>Trạng thái duyệt: </label> <br>
                                    <input type=""radio"" id=""trangThaiDieuTri"" name=""trangThaiDieuTri"" value=""1"" />Khỏi bệnh
                                    <input type=""radio"" id=""trangThaiDieuTri"" name=""trangThaiDieuTri"" value=""0"" />Đang điều trị
                                    <input type=""radio"" id=""trangThaiDieuTri"" name=""trangTh");
                WriteLiteral(@"aiDieuTri"" value=""-1"" />Tử vong
                                </div>
                        </div>
                          </div>
                        </div>
                       <div class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Ngày kết thúc điều trị</label>
                                    <input id=""ngayKetThucDieuTri"" name=""ngayKetThucDieuTri"" class=""form-control"" type=""date"" />
                                </div>
                            </div>
                        </div>


                        <div class=""row"">
                            <div class=""col"">
                           

                                    <div class=""form-group"">
                                    <label class=""control-label"">Bênh án đính kèm</label>
                                    <div class=""file-info"" id=""file-info-1"">
               ");
                WriteLiteral(@"                         <div class=""file-icon""><i class=""fa fa-file-word fa-2x""></i></div>
                                        <div class=""file-content"">
                                            <a class=""benhAnDinhKem"" id=""benhAnDinhKem""></a>
                                        </div>
                                    </div>
                                    <div class=""custom-file"" id=""custom-file-1"">
                                        <label for=""fileBenhAnDinhKem"">Đính kèm</label>
                                        <input type=""file"" id=""fileBenhAnDinhKem"" name=""fileBenhAnDinhKem"" />
                                    </div>
                                </div>

                            </div>
                          
                        </div>
                             
                        
                     
                           <div class=""row"">
                            <div class=""col"">
                                <div cla");
                WriteLiteral(@"ss=""form-group"">
                                    <div id=""trangThaiDuyet"" name=""trangThaiDuyet"">
                                        <label>Trạng thái duyệt: </label> <br>
                                        <input type=""radio"" id=""trangThaiDuyet"" name=""trangThaiDuyet"" value=""1"" />Đã duyệt
                                        <input type=""radio"" id=""trangThaiDuyet"" name=""trangThaiDuyet"" value=""0"" />Chưa duyệt
                                        <input type=""radio"" id=""trangThaiDuyet"" name=""trangThaiDuyet"" value=""-1"" />Đã huỷ
                                    </div>
                                </div>
                               </div>    
                        </div>
                         <div class=""row"">
                            <div class=""col"">
                                <div class=""form-group"">
                                    <label class=""control-label"">Lý do</label>
                                    <input id=""lyDo"" name=""lyDo"" class=""form-con");
                WriteLiteral(@"trol"" type=""text"" />
                                </div>
                            </div>
                        </div>
                        
                           
                        <div class=""form-group"">
                            <div id=""trangThai"" name=""trangThai"">
                                <label>Trạng thái: </label>
                                <input type=""radio"" id=""trangThai"" name=""trangThai"" value=""1"" />Tạm dừng
                                <input type=""radio"" id=""trangThai"" name=""trangThai"" value=""0"" />Đang hoạt động
                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <div class=""form-group"">
                            <button type=""button"" class=""btn btn-primary"" id=""btnSubmit"">Lưu lại</button>
                            <button type=""button"" class=""btn btn-secondary"" id=""btnClose"" data-dismiss=""modal"">Đóng</button>
                ");
                WriteLiteral("        </div>\r\n                    </div>\r\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""notification"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Thông báo</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"" id=""notiMessenger""></div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" id=""btnConfirm"">Xác nhận</button>
                <button type=""button"" class=""btn btn-danger"" id=""btnClose"" data-dismiss=""modal"">Đóng lại</button>
            </div>
        </div>
    </div>
</div>



");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c83ad73f19a0852dc88e620e9e55b5da6ebcbbd641476", async() => {
                WriteLiteral("\r\n    <input id=\"upload\" type=file  name=\"files[]\" onchange=\"handleFileSelect()\">\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n     <button id=\"nhapdulieu\" onclick=\" InpuExcel()\">nhập dữ liệu</button>\r\n    <textarea class=\"form-control\" rows=35 cols=120 id=\"xlx_json\"></textarea>\r\n \r\n \r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"

      

    <script>


        $(document).ready(function () {
              
            Load_Danhsach_BenhAn();
            Load_DSTruong_Combobox();
            Load_DSKhoa_Combobox();
            Load_DSVaccine_Combobox();
            Load_DSSinhVien_Combobox();
            ValidateForm();
            $('#trangThai').hide();
            //$('#ngayBanHanh').datepicker();


        });
        function ResetForm() {
       
     


             $('#ngayBatDauDieuTri').val('');
                   /////////////
                    $('#noiDieuTri').val('');
                    $('#bienThe').val('');
        
             $('input:radio[name=trangThaiDieuTri]').each(function () { $(this).prop('checked', false); });
              $('input:radio[name=trangThaiDuyet]').each(function () { $(this).prop('checked', false); });
              $(""#benhAnDinhKem"").val('');
                    $('#ngayKetThucDieuTri').val('');
        
                      ////////
                   ");
                WriteLiteral(@" $('#lyDo').val('');  
                    $('#ghiChu').val('');               
          
          

        };
         function ThongBao(messenger) {
            $(""#notiMessenger"").empty();
            $(""#notiMessenger"").append(messenger);
            $(""#btnConfirm"").hide();
            $(""#notification"").modal();
        };
        function ValidateForm() {
            $(""form[id='formBenhAn']"").validate({
                rules: {
                    maKhoa: {
                        required: true,
                        minlength: 1,
                        maxlength: 50
                    },
                    tenKhoa: {
                        required: true,
                        minlength: 1,
                        maxlength: 50
                    },
                  
                   
                },
                messages: {
                    maKhoa: {
                        required: ""Vui lòng nhập Mã khoa"",
                        minlength: """);
                WriteLiteral(@"Chiều dài phải lớn hơn 1 ký tự"",
                        maxlength: ""Chiều dài không vượt quá 50 kí tự""
                    },
                    tenKhoa: {
                        required: ""Vui lòng nhập Tên khoa"",
                        minlength: ""Chiều dài phải lớn hơn 1 ký tự"",
                        maxlength: ""Chiều dài không vượt quá 50 ký tự""
                    },
                
                    
                },
                errorElement: 'div',
                errorLabelContainer: '.errorTxt',
                submitHandler: function (form) {
                }
            });
        }
        $('#btnAdd').click(function () {
            ResetForm();
            $('#trangThai').hide();
      
            $('#hiddenvalue').val(''); // Hidden id
              $('#IDTruongAll').show();
            $('#IDKhoaAll').show();
            $('#IDKhoaHocAll').show();
            $(""#IDSinhVien"").prop('disabled', false);
            $('#modalBenhAn').modal();
        })");
                WriteLiteral(@";
        function Load_Danhsach_BenhAn() {
            TaoBang();

            $.ajax({
                url: 'BenhAn/DanhSach',
                type: 'GET',
                data: {
                    
                    IDSinhVien:null,
                    IDKhoaHoc: null,
                    IDKhoa: null,
                    IDTruong: null,
                  
                    TuNgay:null,
                    DenNgay:null,
                    TrangThaiDieuTri:null,
                    TrangThaiDuyet:null,
             

                },
                success: function (data) {
                            
                    if (data.code == 200) {
                        let stt = 0;
                 
                        $.each(data.benhan, function (key, value) {
              
                             stt = stt + 1;
                       
                             let tr = '<tr id=""' + value.idBenhAn+ '"">';
                            tr += '<td>' + stt ");
                WriteLiteral(@"+ '</td>';  
                            tr += '<td>' + value.ghiChu + '</td>';  // MÃ BỆNH ÁN
                            tr += '<td>' + value.hoTen + '</td>';

                             let ngayBatDauDieuTri = new Date(value.ngayBatDauDieuTri);
                            //let hh1 = String(ngayBatDauDieuTri.getHours()).padStart(2, '0');
                            //let m1 = String(ngayBatDauDieuTri.getMinutes()).padStart(2, '0');
                            let dd1 = String(ngayBatDauDieuTri.getDate()).padStart(2, '0');
                            let mm1 = String(ngayBatDauDieuTri.getMonth() + 1).padStart(2, '0'); //January is 0!
                            let yyyy1 = ngayBatDauDieuTri.getFullYear();
                            ngayBatDauDieuTri =  dd1 + '/' + mm1 + '/' + yyyy1;
                            tr += '<td>' + ngayBatDauDieuTri + '</td>';
                            
                           /////////////////////////////////////////
                            
           ");
                WriteLiteral(@"                 if(value.noiDieuTri==null){
                                    tr += '<td>Không có</td>';
                            }
                            else{                                            
                                    tr += '<td>' + value.noiDieuTri + '</td>';                                       
                                }
                            //////////
                            if(value.bienThe==null){
                                    tr += '<td>Không có</td>';
                            }
                            else{                                            
                                    tr += '<td>' + value.bienThe + '</td>';                                     
                                }
                            //////////
                             if(value.khoiBenh=='True'){
                                 tr += '<td>Khỏi bệnh</td>';
                            }
                            else{
       ");
                WriteLiteral(@"                           if(value.tuVong=='True'){
                                         tr += '<td>Tử vong</td>';
                                    }
                                    else{                                            
                                         tr += '<td>Đang điều trị</td>';                                        
                                     }
                            }

                             //Convert Datetime to String
 
                            //////////
                            if(value.ngayKetThucDieuTri!='0001-01-01T00:00:00'){
              
                               let ngayKetThucDieuTri = new Date(value.ngayKetThucDieuTri);
               
                            let dd2 = String(ngayKetThucDieuTri.getDate()).padStart(2, '0');
                            let mm2 = String(ngayKetThucDieuTri.getMonth() + 1).padStart(2, '0'); //January is 0!
                            let yyyy2 = ngayKetThucDieuTri.getFullYear");
                WriteLiteral(@"();
                            ngayKetThucDieuTri =  dd2 + '/' + mm2 + '/' + yyyy2;
                            tr += '<td>' + ngayKetThucDieuTri + '</td>';
                            }
                            else{
                                    tr += '<td>Chưa xác định</td>';
                            }

                         
                          
                            if (value.benhAnDinhKem  == null || value.benhAnDinhKem  == '' ) {
                                    tr += '<td>Không có</td>';
                            }
                            else{
                            tr += '<td>' + value.benhAnDinhKem + '</td>';
                            }
                            
                                 ////////////
                            if(value.trangThaiDuyet=='1'){
                                 tr += '<td>Đã duyệt</td>';
                            }
                            else{
                                  if(value.t");
                WriteLiteral(@"rangThaiDuyet=='0'){
                                         tr += '<td>Chưa duyệt</td>';
                                    }
                                    else{                                            
                                         tr += '<td>Đã huỷ</td>';                                        
                                     }
                            }
                            //////////
                            tr += '<td>'
                            tr += '<button class=""btn btn-sm"" name=""edit"" style=""color:green""><i class=""fa fa-info-circle""></i></button>';
                            tr += '<button class=""btn btn-sm"" name=""delete"" style=""color:red""><i class=""fa fa-trash""></i></button>';
                            tr += '</td>'
                            tr += '</tr>'
                            $('#table-body').append(tr);
                        });
                   Load_PhanTrang();
                    }
                }
            });
 ");
                WriteLiteral(@"       };

        $('#btnSearch').click(function () {
                //Xoa_PhanTrang();      
            let select1 = document.getElementById('timkiem-timtheoIDTruong');
            let option1 = select1.options[select1.selectedIndex];
            let idtruong = option1.value;

            let select2 = document.getElementById('timkiem-timtheoIDKhoa');
            let option2 = select2.options[select2.selectedIndex];
            let idkhoa = option2.value;

             let select3 = document.getElementById('timkiem-timtheoIDKhoaHoc');
            let option3 = select3.options[select3.selectedIndex];
            let idkhoahoc = option3.value;

             let IDSinhVien = $('#timkiem-timtheoIDSinhVien').val().trim();
               
            let TrangThaiDieuTri = $('#timkiem-timtheoTrangThaiDieuTri').val().trim();
            let TrangThaiDuyet = $('#timkiem-timtheoTrangThaiDuyet').val().trim();

            let TuNgay = $('#timkiem-timtheoTuNgay').val().trim();
            let ");
                WriteLiteral(@"DenNgay = $('#timkiem-timtheoDenNgay').val().trim();
        
            
            $.ajax({
                url: 'BenhAn/DanhSach',
                type: 'GET',
                data: {
               
                    IDSinhVien:IDSinhVien,
                    IDKhoaHoc:idkhoahoc,
                    IDKhoa: idkhoa,
                    IDTruong: idtruong,
                    
                    TuNgay:TuNgay,
                    DenNgay:DenNgay,
         
                    TrangThaiDieuTri:TrangThaiDieuTri,
                    TrangThaiDuyet:TrangThaiDuyet
                      
                  
                   
              
                },
                success: function (data) {
               if (data.code == 200) {
                        let stt = 0;
              
                        
                       $('#table-full').empty();
                        TaoBang();
                       
                        $.each(data.benhan, function (key");
                WriteLiteral(@", value) {
                             stt = stt + 1;
                         

                            let tr = '<tr id=""' + value.idBenhAn+ '"">';
                            tr += '<td>' + stt + '</td>';  
                            tr += '<td>' + value.ghiChu + '</td>';  // MÃ BỆNH ÁN
                            tr += '<td>' + value.hoTen + '</td>';

                             let ngayBatDauDieuTri = new Date(value.ngayBatDauDieuTri);
                            //let hh1 = String(ngayBatDauDieuTri.getHours()).padStart(2, '0');
                            //let m1 = String(ngayBatDauDieuTri.getMinutes()).padStart(2, '0');
                            let dd1 = String(ngayBatDauDieuTri.getDate()).padStart(2, '0');
                            let mm1 = String(ngayBatDauDieuTri.getMonth() + 1).padStart(2, '0'); //January is 0!
                            let yyyy1 = ngayBatDauDieuTri.getFullYear();
                            ngayBatDauDieuTri =  dd1 + '/' + mm1 + '/' + yyyy1;
        ");
                WriteLiteral(@"                    tr += '<td>' + ngayBatDauDieuTri + '</td>';
                            
                           /////////////////////////////////////////
                            
                            if(value.noiDieuTri==null){
                                    tr += '<td>Không có</td>';
                            }
                            else{                                            
                                    tr += '<td>' + value.noiDieuTri + '</td>';                                       
                                }
                            //////////
                            if(value.bienThe==null){
                                    tr += '<td>Không có</td>';
                            }
                            else{                                            
                                    tr += '<td>' + value.bienThe + '</td>';                                     
                                }
                           ");
                WriteLiteral(@" //////////
                             if(value.khoiBenh=='True'){
                                 tr += '<td>Khỏi bệnh</td>';
                            }
                            else{
                                  if(value.tuVong=='True'){
                                         tr += '<td>Tử vong</td>';
                                    }
                                    else{                                            
                                         tr += '<td>Đang điều trị</td>';                                        
                                     }
                            }
                         
                             //Convert Datetime to String
 
                            //////////
                            if(value.ngayKetThucDieuTri!='0001-01-01T00:00:00'){
              
                               let ngayKetThucDieuTri = new Date(value.ngayKetThucDieuTri);
                            //let hh1 = String(bienThe.getHours()");
                WriteLiteral(@").padStart(2, '0');
                            //let m1 = String(bienThe.getMinutes()).padStart(2, '0');
                            let dd2 = String(ngayKetThucDieuTri.getDate()).padStart(2, '0');
                            let mm2 = String(ngayKetThucDieuTri.getMonth() + 1).padStart(2, '0'); //January is 0!
                            let yyyy2 = ngayKetThucDieuTri.getFullYear();
                            ngayKetThucDieuTri =  dd2 + '/' + mm2 + '/' + yyyy2;
                            tr += '<td>' + ngayKetThucDieuTri + '</td>';
                            }
                            else{
                                    tr += '<td>Chưa xác định</td>';
                            }

                         
                          
                            if (value.benhAnDinhKem  == null || value.benhAnDinhKem  == '' ) {
                                    tr += '<td>Không có</td>';
                            }
                            else{
                           ");
                WriteLiteral(@" tr += '<td>' + value.benhAnDinhKem + '</td>';
                            }
                             ////////////
                            if(value.trangThaiDuyet=='1'){
                                 tr += '<td>Đã duyệt</td>';
                            }
                            else{
                                  if(value.trangThaiDuyet=='0'){
                                         tr += '<td>Chưa duyệt</td>';
                                    }
                                    else{                                            
                                         tr += '<td>Đã huỷ</td>';                                        
                                     }
                            }
                            //////////
                            tr += '<td>'
                            tr += '<button class=""btn btn-sm"" name=""edit"" style=""color:green""><i class=""fa fa-info-circle""></i></button>';
                            tr += '<button class=""bt");
                WriteLiteral(@"n btn-sm"" name=""delete"" style=""color:red""><i class=""fa fa-trash""></i></button>';
                            tr += '</td>'
                            tr += '</tr>'
                            $('#table-body').append(tr);
                        });
                        destroy();
                   //Load_PhanTrang();
                       
                    }
                }
            });
        });

       function ThongBao(messenger) {
            $(""#notiMessenger"").empty();
            $(""#notiMessenger"").append(messenger);
            $(""#btnConfirm"").hide();
            $(""#notification"").modal();
        };

         $('#btnSubmit').click(function () {
            let hiddenvalue = $('#hiddenvalue').val();


        

  
            let IDSinhVien = $('#IDSinhVien').val().trim();
            let ngayBatDauDieuTri = $('#ngayBatDauDieuTri').val().trim();
            let noiDieuTri = $('#noiDieuTri').val().trim();
            let bienThe = $('#bienThe').val().tri");
                WriteLiteral(@"m();
            let khoiBenh;
            let tuVong;
            let trangThaiDieuTri = $('input[id=""trangThaiDieuTri""]:checked').val();
            if(trangThaiDieuTri==""1""){
                                 khoiBenh=""True"";
                                 tuVong=""False"";
                            }
                            else{
                                  if(trangThaiDieuTri==""-1""){
                                         khoiBenh=""False"";
                                         tuVong=""True"";
                                    }
                                    else{                                            
                                         khoiBenh=""False"";
                                         tuVong=""False"";                                     
                                     }
                            }

            let ngayKetThucDieuTri = $('#ngayKetThucDieuTri').val().trim();

            let fileBenhAnDinhKem = $('#fileBenhAnDinhKem')[0");
                WriteLiteral(@"].files[0];
   
            let trangThaiDuyet = $('input[id=""trangThaiDuyet""]:checked').val();
            let lyDo = $('#lyDo').val().trim();
            let ghiChu = $('#ghiChu').val().trim();


            let formData1 = new FormData();
        
            formData1.append('iDSinhVien', IDSinhVien);
            formData1.append('ngayBatDauDieuTri', ngayBatDauDieuTri);
            formData1.append('noiDieuTri', noiDieuTri);
            formData1.append('bienThe', bienThe);
            formData1.append('khoiBenh', khoiBenh);
            formData1.append('tuVong', tuVong);
            formData1.append('ngayKetThucDieuTri', ngayKetThucDieuTri);
             
  
            formData1.append('fileBenhAnDinhKem', fileBenhAnDinhKem);
            formData1.append('trangThaiDuyet', trangThaiDuyet);

            formData1.append('lyDo', lyDo);
         
            formData1.append('ghiChu', ghiChu);
         

            let formData2 = new FormData();
            formData2 = formData1");
                WriteLiteral(@";
            formData2.append('iDBenhAn', hiddenvalue);
            formData2.append('benhAnDinhKem', $(""#benhAnDinhKem"").text());
                
            //formData2.append('trangThai', trangThai);
           
          

            if ($(""#formBenhAn"").valid()) {
                if (hiddenvalue.length == 0) {
                    //Thêm mới
                    $.ajax({
                        url: '/BenhAn/TaoMoi',
                        type: 'POST',
                        data: formData1,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            if (data.code == 200) {
                                console.log(formData1);
                                ResetForm();
                                $('#table-body').empty();
                                $('#btnSearch').click();
                                $('#btnClose').click();
                               ");
                WriteLiteral(@" ThongBao(data.msg);
                              
                         
                           
                            } else {
                                $('#btnClose').click();
                                ThongBao(data.msg);
                            }
                        }
                    });
                }
                else if (hiddenvalue.length != 0) {
                    //Chỉnh sửa

                    $.ajax({
                        url: '/BenhAn/ChinhSua',
                        type: 'PUT',
                        data: formData2,
                        contentType: false,
                        processData: false,
                        success: function (data) {
                            if (data.code == 200) {
                                $('#table-body').empty();
                                  $('#btnSearch').click();
                                $('#btnClose').click();
                                ThongBao(data");
                WriteLiteral(@".msg);
                            } else {
                                $('#btnClose').click();
                                ThongBao(data.msg);
                            }
                        }
                    })
                }
            }
        });

         $(document).on('click', ""button[name='edit']"", function () {
            ResetForm();

            //$('#trangThai').show();
            let id = $(this).closest('tr').attr('id');
            $('#hiddenvalue').val(id);
                 

                   
             
             
            $.ajax({
                url: '/BenhAn/LayTheoID',
                type: 'GET',
                data: { id: id },
                success: function (data) {
              
                    
                $('#IDTruongAll').hide();
                $('#IDKhoaAll').hide();
                $('#IDKhoaHocAll').hide();
                $(""#IDSinhVien"").prop('disabled', true);

                //let IDTruong ");
                WriteLiteral(@"= data.benhan.idTruong;
             
                //let IDKhoa=data.benhan.idKhoa;
      

                //  Load_Khoa_Combobox_ChinhSua(IDTruong,IDKhoa);
                    // TAI DU LIEU KHOA COMBOBOX
              
                   
                 $(""#IDSinhVien"").val(data.benhan.idSinhVien).change();   
                 ///////
                         let ngayBatDauDieuTri = new Date(data.benhan.ngayBatDauDieuTri);
                    //let hh1 = String(ngayBatDauDieuTri.getHours()).padStart(2, '0');
                    //let m1 = String(ngayBatDauDieuTri.getMinutes()).padStart(2, '0');
                    let dd1 = String(ngayBatDauDieuTri.getDate()).padStart(2, '0');
                    let mm1 = String(ngayBatDauDieuTri.getMonth() + 1).padStart(2, '0'); //January is 0!
                    let yyyy1 = ngayBatDauDieuTri.getFullYear();
                    ngayBatDauDieuTri =     yyyy1+""-""+mm1+""-""+dd1;                     
                    $('#ngayBatDauDieuTri').val(ngayBa");
                WriteLiteral(@"tDauDieuTri);
                   /////////////
                    $('#noiDieuTri').val(data.benhan.noiDieuTri);
                    $('#bienThe').val(data.benhan.bienThe);
                    ////
                    let $radios1 = $('input:radio[name=trangThaiDieuTri]');
                      let valuecheck=""0"";
                     if(data.benhan.khoiBenh==""True""){
                         valuecheck=""1"";
                     }
                     else{
                          if(data.benhan.tuVong==""True""){
                              valuecheck=""-1"";
                             }
                  
                     }
                     $radios1.filter('[value='+valuecheck+']').prop('checked', true);
                     ///////
                      if(data.benhan.ngayKetThucDieuTri !='0001-01-01T00:00:00' ){
              
                             let ngayKetThucDieuTri = new Date(data.benhan.ngayKetThucDieuTri);
                          
                          ");
                WriteLiteral(@"  let dd2 = String(ngayKetThucDieuTri.getDate()).padStart(2, '0');
                            let mm2 = String(ngayKetThucDieuTri.getMonth() + 1).padStart(2, '0'); 
                            let yyyy2 = ngayKetThucDieuTri.getFullYear();
                            ngayKetThucDieuTri =  yyyy2+""-""+mm2+""-""+dd2;
                          
                    $('#ngayKetThucDieuTri').val(ngayKetThucDieuTri);
                    }
                    else{

                    }

                    ///////

                    $('#benhAnDinhKem').text(data.benhan.benhAnDinhKem);
                    $(""#benhAnDinhKem"").attr(""href"",  ""\\files\\BenhAn\\"" +data.benhan.benhAnDinhKem);
                    //////////
                     let $radios2 = $('input:radio[name=trangThaiDuyet]');
                
                     $radios2.filter('[value='+data.benhan.trangThaiDuyet+']').prop('checked', true);
                   
                      ////////
                    $('#lyDo').val(data.");
                WriteLiteral(@"benhan.lyDo);  
                    $('#ghiChu').val(data.benhan.ghiChu);               
                 
                    $('#modalBenhAn').modal();
                }

            });
            $.ajax({
                url: '/FileUpload/LayTheoDoiTuongID',
                type: 'get',
                data: { doiTuongID: id },
                success: function (data) {
                    for (let i = 0; i < data.files.length; i++) {
                        if (data.files[i].sttTep === 1) {
                            $('#benhAnDinhKem').attr('href', data.files[i].noiLuuTru);
                        }
                        //if (data.files[i].sttTep === 2) {
                        //    $('#file-name-2').attr('href', data.files[i].noiLuuTru);
                        //}
                    }
                }
            });
         });
        $(document).on('click', ""button[name='delete']"", function () {
            let id = $(this).closest('tr').attr('id');
            va");
                WriteLiteral(@"r noti = confirm(""Bạn có muốn xóa không?"");
            if (noti == true) {
                $.ajax({
                    url: 'BenhAn/XoaBo',
                    type: 'DELETE',
                    data: { id: id },
                    success: function (data) {
                        if (data.code == 200) {
                            $('#table-body').empty();
                            $('#btnSearch').click();
                            ThongBao(data.msg);
                        }
                        else ThongBao(data.msg);
                    }
                })
            } else {
                alert(""You pressed Cancel!"");
            }
        });
 
        function Load_DSTruong_Combobox() {
            $.ajax({
                url: 'Truong/DanhSach',
                type: 'GET',
                data: {
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.");
                WriteLiteral(@"each(data.truong, function (key, value) {
                            let option = '<option  value=""' + value.idTruong + '"" class=""form-control"">' +  value.tenTruong+ '</option>';
                            $('#timkiem-timtheoIDTruong').append(option);
                            $('#IDTruong').append(option);
                        });
                    }
                }
            });
        };
             function Load_DSKhoa_Combobox() {
            $.ajax({
                url: 'Khoa/DanhSach',
                type: 'GET',
                data: {
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.khoa, function (key, value) {
                            let option = '<option  value=""' + value.idKhoa + '"" class=""form-control"">' +  value.tenKhoa+ '</option>';
                            $('#timkiem-timtheoIDKhoa').append(option);
                            $(");
                WriteLiteral(@"'#IDKhoa').append(option);
                        });
                    }
                }
            });
        };
        function Load_DSVaccine_Combobox() {
            $.ajax({
                url: 'Vaccine/DanhSach',
                type: 'GET',
                data: {
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.vaccine, function (key, value) {
                            let option = '<option  value=""' + value.idVaccine + '"" class=""form-control"">' +  value.tenVaccine+ '</option>';
                            $('#timkiem-timtheoIDVaccine').append(option);
                            $('#IDVaccine').append(option);
                        });
                    }
                }
            });
        };
           function Load_DSSinhVien_Combobox() {
            $.ajax({
                url: 'SinhVien/DanhSach',
                type: 'GET',
");
                WriteLiteral(@"                data: {
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.sinhvien, function (key, value) {
                            let option = '<option  value=""' + value.idSinhVien + '"" class=""form-control"">' +  value.hoTen+ '</option>';
 
                            $('#IDSinhVien').append(option);
                        });
                    }
                }
            });
        };

        function TruongChanged(obj) {
            var message = document.getElementById('timkiem-timtheoIDTruong');
            var value = obj.value;
            $(""#timkiem-timtheoIDKhoa"").empty();
           let option = ' <option class=""form-control"" value="""">- Tất cả -</option>';
                            $('#timkiem-timtheoIDKhoa').append(option);

                                    
             //alert(""You selected:""+value);
              $.ajax({
            ");
                WriteLiteral(@"    url: 'Khoa/DanhSach',
                type: 'GET',
                data: {
                    IDTruong:value
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.khoa, function (key, value) {
                            let option = '<option  value=""' + value.idKhoa + '"" class=""form-control"">' +  value.tenKhoa+ '</option>';
                            $('#timkiem-timtheoIDKhoa').append(option);
                         
                            //$('#IDTruong').append(option);
                        });
                    }
                }
            });
            
        };
        
        function KhoaChanged(obj) {
            var message = document.getElementById('timkiem-timtheoIDKhoa');
            var value = obj.value;
            $(""#timkiem-timtheoIDKhoaHoc"").empty();
           let option = ' <option class=""form-control"" value="""">- Tất cả -</o");
                WriteLiteral(@"ption>';
                            $('#timkiem-timtheoIDKhoaHoc').append(option);

              if(value!=''){                 
             //alert(""You selected:""+value);
                  $.ajax({
                    url: 'KhoaHoc/DanhSach',
                    type: 'GET',
                    data: {
                        IDKhoa:value
             
                    },
                    success: function (data) {
                        if (data.code == 200) {
            
                            $.each(data.khoahoc, function (key, value) {
                                let option = '<option  value=""' + value.idKhoaHoc + '"" class=""form-control"">' +  value.khoaHoc+ '</option>';
                                $('#timkiem-timtheoIDKhoaHoc').append(option);
                         
                                //$('#IDTruong').append(option);
                            });
                        }
                    }
                });
            }
          ");
                WriteLiteral(@"  
        };
         function KhoaHocChanged(obj) {
                     var message = document.getElementById('timkiem-timtheoIDKhoaHoc');
            var value = obj.value;
            $(""#timkiem-timtheoIDSinhVien"").empty();
           let option = ' <option class=""form-control"" value="""">- Tất cả -</option>';
                            $('#timkiem-timtheoIDSinhVien').append(option);

              if(value!=''){    
 

                                    
             //alert(""You selected:""+value);
              $.ajax({
                url: 'SinhVien/DanhSach',
                type: 'GET',
                data: {
                    IDKhoaHoc:value
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.sinhvien, function (key, value) {
                            let option = '<option  value=""' + value.idSinhVien + '"" class=""form-control"">' +  value.hoTen+ '</optio");
                WriteLiteral(@"n>';
                                   $('#timkiem-timtheoIDSinhVien').append(option);
                         
             
                        });
                    }
                }
            });
            }
            
        };
        function Truong2Changed(obj) {
            var message = document.getElementById('IDTruong');
            var value = obj.value;
            $(""#IDKhoa"").empty();
 

                                    
             //alert(""You selected:""+value);
              $.ajax({
                url: 'Khoa/DanhSach',
                type: 'GET',
                data: {
                    IDTruong:value
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.khoa, function (key, value) {
                            let option = '<option  value=""' + value.idKhoa + '"" class=""form-control"">' +  value.tenKhoa+ '</option>';
     ");
                WriteLiteral(@"                       $('#IDKhoa').append(option);
                         
                            //$('#IDTruong').append(option);
                        });
                    }
                }
            });
            
        };
        function Khoa2Changed(obj) {
            var message = document.getElementById('IDKhoa');
            var value = obj.value;
            $(""#IDKhoaHoc"").empty();
 

                                    
             //alert(""You selected:""+value);
              $.ajax({
                url: 'KhoaHoc/DanhSach',
                type: 'GET',
                data: {
                    IDKhoa:value
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.khoahoc, function (key, value) {
                            let option = '<option  value=""' + value.idKhoaHoc + '"" class=""form-control"">' +  value.khoaHoc+ '</option>';
    ");
                WriteLiteral(@"                        $('#IDKhoaHoc').append(option);
                         
             
                        });
                    }
                }
            });
            
        };
          function KhoaHoc2Changed(obj) {
            var message = document.getElementById('IDKhoaHoc');
            var value = obj.value;
            $(""#IDSinhVien"").empty();
 

                                    
             //alert(""You selected:""+value);
              $.ajax({
                url: 'SinhVien/DanhSach',
                type: 'GET',
                data: {
                    IDKhoaHoc:value
             
                },
                success: function (data) {
                    if (data.code == 200) {
            
                        $.each(data.sinhvien, function (key, value) {
                            let option = '<option  value=""' + value.idSinhVien + '"" class=""form-control"">' +  value.hoTen+ '</option>';
                            $('#ID");
                WriteLiteral(@"SinhVien').append(option);
                         
             
                        });
                    }
                }
            });
            
        };
        function Load_Khoa_Combobox_ChinhSua(valu, selec) {
                  
            $(""#IDKhoa"").empty();
                   $.ajax({
                        url: 'Khoa/DanhSach',
                        type: 'GET',
                        data: {
                            IDTruong:valu
             
                        },
                        success: function (data) {
       
                            if (data.code == 200) {
            
                                $.each(data.khoa, function (key, value) {
                                    let option = '<option  value=""' + value.idKhoa + '"" class=""form-control"">' +  value.tenKhoa+ '</option>';
                                    $('#IDKhoa').append(option);
                                  
                         
                ");
                WriteLiteral(@"                 
                                });
                                $(""#IDKhoa"").val(selec).change(); 
                            }
                        }
                    });
                    
                
        };
         function Load_PhanTrang() {
    
        
         $('#table-full').dataTable( 
 
             {
              ""language"": {
              ""sProcessing"":   ""Đang xử lý..."",
              ""sLengthMenu"":   ""Xem _MENU_ mục"",
              ""sZeroRecords"":  ""Không tìm thấy dòng nào phù hợp"",
              ""sInfo"":         ""Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục"",
              ""sInfoEmpty"":    ""Đang xem 0 đến 0 trong tổng số 0 mục"",
              ""sInfoFiltered"": ""(được lọc từ _MAX_ mục)"",
              ""sInfoPostFix"":  """",
              ""sSearch"":       ""Tìm:"",
              ""sUrl"":          """",
              ""oPaginate"": {
                  ""sFirst"":    ""Đầu"",
                  ""sPrevious"": ""Trước"",
                 ");
                WriteLiteral(@" ""sNext"":     ""Tiếp"",
                  ""sLast"":     ""Cuối""
                  }
              },
              ""processing"": true, // tiền xử lý trước
              ""aLengthMenu"": [[ 10, 20, 50,100,1000,999999], [ 10, 20, 50,100,1000,999999]], // danh sách số trang trên 1 lần hiển thị bảng
              ""order"": [[ 1, 'desc' ]] //sắp xếp giảm dần theo cột thứ 1
             
          } );
        };


        function destroy() {
            //   $('#table-full').DataTable( {
             
            //} );
            //         $('#table-full').DataTable( {
            //    paging: false
            //} );
 
            $('#table-full').DataTable( {
                  ""bDestroy"": true,
                   
              ""language"": {
              ""sProcessing"":   ""Đang xử lý..."",
              ""sLengthMenu"":   ""Xem _MENU_ mục"",
              ""sZeroRecords"":  ""Không tìm thấy dòng nào phù hợp"",
              ""sInfo"":         ""Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục"",");
                WriteLiteral(@"
              ""sInfoEmpty"":    ""Đang xem 0 đến 0 trong tổng số 0 mục"",
              ""sInfoFiltered"": ""(được lọc từ _MAX_ mục)"",
              ""sInfoPostFix"":  """",
              ""sSearch"":       ""Tìm:"",
              ""sUrl"":          """",
              ""oPaginate"": {
                  ""sFirst"":    ""Đầu"",
                  ""sPrevious"": ""Trước"",
                  ""sNext"":     ""Tiếp"",
                  ""sLast"":     ""Cuối""
                  }
              },
                                ""aLengthMenu"": [[ 10, 20, 50,100,1000,999999], [ 10, 20, 50,100,1000,999999]], 
                //searching: false
            } );
             }
        function TaoBang() {

                
                
                

            let str = '<thead>';
            str += '<tr>';
            str += '<th style=""width:10%"">STT</th>';
            str += '<th style=""width:10%"">Mã bệnh án</th>';
            str += '<th style=""width:15%"">Họ Tên</th>';
            str += '<th style=""width:10%"">Ngày ");
                WriteLiteral(@"bắt đầu</th>';
            str += '<th style=""width:10%"">Nơi điều trị</th>';
            str += '<th style=""width:10%"">Biến thể</th> ';
            str += '<th style=""width:10%"">Trạng thái điều trị</th> ';
            str += '<th style=""width:10%"">Ngày kết thúc</th>';
            str += ' <th style=""width:10%"">Bênh án đính kèm</th>';
            str += '<th style=""width:10%"">Trạng thái duyệt</th>';
            str += '<th style=""width:10%"">Chức năng</th>';
            str += '</thead>';
            str += '<tbody id=""table-body"">';
            str += '</tbody>';                              
         $('#table-full').append(str);                  
        };
         
              
 
     function exportTableToExcel(tableID, filename = ''){
            var downloadLink;
            var dataType = '	application/vnd.ms-excel';
            var tableSelect = document.getElementById(tableID);
            var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');
    
            // Specify ");
                WriteLiteral(@"file name
            filename = filename?filename+'.xls':'excel_data.xls';
    
            // Create download link element
            downloadLink = document.createElement(""a"");
    
            document.body.appendChild(downloadLink);
    
            if(navigator.msSaveOrOpenBlob){
                var blob = new Blob(['\ufeff', tableHTML], {
                    type: dataType
                });
                navigator.msSaveOrOpenBlob( blob, filename);
            }else{
                // Create a link to the file
                downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
    
                // Setting the file name
                downloadLink.download = filename;
        
                //triggering the function
                downloadLink.click();
            }
    }
      


   var ExcelToJSON = function() {
 
      this.parseExcel = function(file) {
        var reader = new FileReader();
 
        reader.onload = function(e) {
          var dat");
                WriteLiteral(@"a = e.target.result;
          var workbook = XLS.read(data, {
            type: 'binary'
          });
           var kq=0;
             var s1=0;
            var s2=0;
         
          workbook.SheetNames.forEach(function(sheetName) {
            // Here is your object
            var XL_row_object = XLS.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
            var json_object = JSON.stringify(XL_row_object);
            //alert(json_object);
          
        
       
               
              
   
            console.log(JSON.parse(json_object));
            jQuery( '#xlx_json' ).val( json_object );
            //InpuExcel();
          })
        };
 
        reader.onerror = function(ex) {
          console.log(ex);
        };
 
        reader.readAsBinaryString(file);
      };
  };
 
  function handleFileSelect() {
    
 
    var files = $('#upload')[0].files;; // FileList object
    var xl2json = new ExcelToJSON();
    xl2json.parseExcel(file");
                WriteLiteral(@"s[0]);
  }
 
       //document.getElementById('nhapdulieu').addEventListener('click', handleFileSelect, false);


      function InpuExcel() {

         var json_object = $('#xlx_json').val();

            var myObj = JSON.parse(json_object);
                            
            var dong=1;
            var loi=0;
            var dongloi='';
            $.each(myObj, function (key, value) {


                   
   
                 
                     var formData3 = new FormData();
                    
                    formData3.append('MaSinhVien',  value.MaSinhVien);
                    formData3.append('NgayBatDauDieuTri',  value.NgayBatDauDieuTri);
                    formData3.append('NoiDieuTri',  value.NoiDieuTri);
                    if( value.BienThe !=undefined){
                                formData3.append('BienThe',  value.BienThe);
                    }
            
                    if(value.TrangThaiDieuTri==""Khỏi bệnh""){
                        fo");
                WriteLiteral(@"rmData3.append('KhoiBenh',  ""True"");
                        formData3.append('TuVong',  ""False"");
                    }
                    else{
                            if(value.TrangThaiDieuTri==""Tử vong""){
                                formData3.append('KhoiBenh',  ""False"");
                                formData3.append('TuVong',  ""True"");
                            }
                            else{
                                formData3.append('KhoiBenh',  ""False"");
                                formData3.append('TuVong',  ""False"");
                            }

                    }
                      if( value.NgayKetThucDieuTri !=undefined)
                      {
                     formData3.append('NgayKetThuc',  value.NgayKetThucDieuTri);
                          
                      }
                     
          
             

                    formData3.append('GhiChu',  value.MaBenhAn);
             
                    
                ");
                WriteLiteral(@"  
                
                     $.ajax({
                            url: '/BenhAn/TaoMoi_Excel',
                            type: 'POST',
                            data: formData3,
                            async: false,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                dong=dong+1;
                                if (data.code == 200) {
                                    console.log(formData3);
                                 
                                                      
                             
                                
                                        
                                } else {
                       
                                    loi+=1;
                                    dongloi+=  dong+"";""
                                }
                      
                                     ");
                WriteLiteral(@"        
                           }        
                    
                    });
                   
                  
     
                       

                    

           });
             if(loi==0){
                 ThongBao(""Tất cả thành công"");
             }
             else{
                    ThongBao(""Dòng lỗi: ""+dongloi+"" tổng số dòng lỗi:""+loi);
             }
                

             $('#btnSearch').click();
  }
     $(""#fileBenhAnDinhKem"").change(function () {
            let inputfile = document.getElementById(""fileBenhAnDinhKem"").files;
            let file = inputfile[0];
            $('#file-info-1').show();
            $('#benhAnDinhKem').text(file.name);
            //$(""#benhAnDinhKem"").attr(""href"",  ""\\files\\ChiTietTiem\\"" +file.name);

        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<QuanLyCovidDHH.Web.Models.BenhAn.TaoMoi> Html { get; private set; }
    }
}
#pragma warning restore 1591
